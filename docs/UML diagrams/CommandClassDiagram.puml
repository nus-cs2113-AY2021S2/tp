@startuml
'https://plantuml.com/class-diagram

hide circle
skinparam classAttributeIconSize 0
hide empty members

package command <<rectangle>>{
class Command
class ArchiveCommand
class ComposeCommand
class DeleteCommand
class EditCommand
class ExitCommand
class FindCommand
class HelpCommand
class ListCommand
class NumberCommand
class ReadCommand
class ResetCommand
class SendCommand
class SortCommand
class TagCommand
}

Main ---> Command: executes
ArchiveCommand -down-|> Command
ComposeCommand -down--|> Command
DeleteCommand -down---|> Command
EditCommand -down---|> Command
ExitCommand -down--|> Command
FindCommand -down-|> Command
HelpCommand -left-|> Command
ListCommand -right-|> Command
NumberCommand -up-|> Command
ReadCommand -up--|> Command
ResetCommand -up---|> Command
SendCommand -up---|> Command
SortCommand -up--|> Command
TagCommand -up-|> Command

Command ....|> Ui: prints with
Command ...|> Storage: updates
Command ..|> EmailManager: updates

class ArchiveCommand{
+ void execute(EmailManager,Ui,Storage)
}

class ComposeCommand{
+ void execute(EmailManager,Ui,Storage)
}

class DeleteCommand{
+ void execute(EmailManager,Ui,Storage)
}

class EditCommand{
+ void execute(EmailManager,Ui,Storage)
}

class ExitCommand{
+ void execute(EmailManager,Ui,Storage)
}

class FindCommand{
+ void execute(EmailManager,Ui,Storage)
}

class HelpCommand{
+ void execute(EmailManager,Ui,Storage)
}

class ListCommand{
+ void execute(EmailManager,Ui,Storage)
}

class NumberCommand{
+ void execute(EmailManager,Ui,Storage)
}

class ReadCommand{
+ void execute(EmailManager,Ui,Storage)
}

class ResetCommand{
+ void execute(EmailManager,Ui,Storage)
}

class SendCommand{
+ void execute(EmailManager,Ui,Storage)
}

class SortCommand{
+ void execute(EmailManager,Ui,Storage)
}

class TagCommand{
+ void execute(EmailManager,Ui,Storage)
}

@enduml