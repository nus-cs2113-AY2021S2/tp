@startuml CommandClassDiagram
'https://plantuml.com/class-diagram
!include style.puml

skinparam arrowThickness 1.1
skinparam arrowColor COMMAND_COLOR_T4
skinparam classBackgroundColor COMMAND_COLOR_T2
skinparam classAttributeIconSize 0

package "Command Component" <<Rectangle>> {
    class "{abstract}\nCommand" as Command
    class AddCommand
    class RemoveCommand
    class ListCommand
    class SearchCommand
    class SetLimitCommand
    class HelpCommand
    class ClearCommand
    class ByeCommand
    class RunningLowCommand
    class ExpiringCommand
    Class HistoryCommand
}

package Fridge <<Rectangle>> FOOD_COLOR {
}

package FridgeFriend <<Rectangle>> FRIDGEFRIEND_COLOR {
}

package UI <<Rectangle>> UTILITIES_COLOR {
}

class Command {
  #fridge: Fridge
  #isExit: boolean
  +execute(): void{abstract}
  +setData(fridge: Fridge): void
}

class AddCommand {
  -foodToAdd: Food
  +execute(): void
  -addFood(): void
  -showResults(): void
  +getMessagePrintedToUser(): String
  +categoriseAndGenerateFood(): Food {static}
}

class RemoveCommand {
  -foodNameToEdit: String
  -foodToBeRemoved: Food
  +execute(): void
  -removePortion(): void
  -checkRunningOUt(): void
}

class ListCommand {
  -description: String
  -indexShownToUser: int
  +execute(): void
  -listByCategory(): void
  -listByStorageLocation(): void
  -listAll(): void
}

class SearchCommand {
  -foodName: String
  -isFound: boolean
  -index: int
  +execute(): void
  -showResults(): void
  +getMessagePrintedToUser(): String
  -getSearchByNameMessage(): String
  -isContain(message: StringBuilder, food:Food): void
  -updateMessage(message: StringBuilder, food:Food): void
}

class SetLimitCommand {
  -foodCategory: FoodCategory
  -quantity: int
  +execute(): void
  -getSetLimitMessage(): String
}


class HelpCommand {
  - COMMANDS: String {static}
  - CATEGORIES: String {static}
  - LOCATIONS: String {static}
  + execute() : void
}

class ClearCommand {
  +execute(): void
}

class ByeCommand {
  +isExit(): boolean
  +setExit(isExit: boolean): void
  +execute(): void
}

class RunningLowCommand {
  -index: int
  -numberOfCategoryDisabled: int
  -isStockedUp: boolean
  +execute(): void
  +getMessage(): String
  -updateMessage(foodCategory: FoodCategory): void
  -increaseNumberOfCategoryDisabled():void
  -isAllCategoryDisabled():boolean
}

class ExpiringCommand {
  -messageExpired: String
  -messageExpiring: String
  -messageNoExpiring: String
  -fullMessage: String
  -indexExpiring: int
  -indexExpired: int
  +execute(): void
  +updateExpiringMessage(food: Food): void
  +addToExpiringMessage(food: Food): void
  +updateExpiredMessage(food: Food): void
  +addToExpiredMessage(food: Food): void
}

class HistoryCommand {
  -description: String
  +execute(): void
  -isClearHistory(): boolean
  -clearHistory(): void {static}
  +getHistoryMessage(): String {static}
  -printHistory(): void
}

Command ---.down> Fridge: uses >
Command ---.down> UI: prints with >
FridgeFriend ---.down> Command: executes >
AddCommand ---up|> Command
RemoveCommand --down|> Command
ListCommand ---down|> Command
SearchCommand ---right|> Command
SetLimitCommand ---down|> Command
ClearCommand --up|> Command
HelpCommand ---up|> Command
ByeCommand --down|> Command
RunningLowCommand --left|> Command
ExpiringCommand ---up|> Command
HistoryCommand ---down|> Command

@enduml
